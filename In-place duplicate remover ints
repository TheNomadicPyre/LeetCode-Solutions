'''Given an integer array nums sorted in non-decreasing order, remove the duplicates in-place such that each unique
element appears only once. The relative order of the elements should be kept the same.'''

class Solution:
    def removeDuplicates(self, nums: List[int]) -> int:

        #the array is sorted, so we just make a comparison between 2 indicies
        incre = 1 #an incrementer for when we iterate through 
        for i in range(1, len(nums)):# this is the input string length
            if nums[i] != nums[i -1]:#compare the current index with the previous index if they are different update, otherwise keep going
                nums[incre] = nums[i]
                incre += 1
        return incre
        
        '''An alternative here is to use sets and builtins with the following
          nums[:] = sorted(set(nums))
          return len(nums) #this takes advantage of the fact that in python sets are a collection of unique data so if you pass
          #these data then what you'll get back is a collection of all the unique values'''
